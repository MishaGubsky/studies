Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> block
Rule 1     block -> <empty>
Rule 2     block -> LBRACKET body RBRACKET
Rule 3     body -> expression
Rule 4     body -> function_declaration
Rule 5     expression -> declaration_with_assignment expression
Rule 6     expression -> declaration_with_assignment
Rule 7     expression -> if expression
Rule 8     expression -> else
Rule 9     expression -> function_body
Rule 10    expression -> function_implementation SEMICOLON
Rule 11    expression -> function_implementation SEMICOLON expression
Rule 12    expression -> arithmetic_expression
Rule 13    expression -> while expression
Rule 14    expression -> while
Rule 15    expression -> console_function
Rule 16    expression -> console_function expression
Rule 17    declaration_with_assignment -> VAR ID ASSIGNMENT_OPERATOR arithmetic_expression SEMICOLON
Rule 18    declaration_with_assignment -> VAR ID ASSIGNMENT_OPERATOR function_declaration
Rule 19    arithmetic_expression -> ID MATH_OPERATOR arithmetic_expression
Rule 20    arithmetic_expression -> ID MATH_OPERATOR SEMICOLON
Rule 21    arithmetic_expression -> NUMBER MATH_OPERATOR arithmetic_expression
Rule 22    arithmetic_expression -> arithmetic_expression MATH_OPERATOR arithmetic_expression
Rule 23    arithmetic_expression -> NUMBER
Rule 24    arithmetic_expression -> ID
Rule 25    arithmetic_expression -> STRING
Rule 26    function_declaration -> FUNCTION LPAREN parameters RPAREN LBRACKET function_body RBRACKET
Rule 27    function_body -> expression
Rule 28    function_body -> RETURN expression SEMICOLON
Rule 29    function_implementation -> ID LPAREN function_parameters RPAREN
Rule 30    function_implementation -> function_implementation MATH_OPERATOR expression
Rule 31    function_parameters -> <empty>
Rule 32    function_parameters -> function_parameters COMMA function_parameters
Rule 33    function_parameters -> arithmetic_expression
Rule 34    parameters -> <empty>
Rule 35    parameters -> parameters COMMA parameters
Rule 36    parameters -> arithmetic_expression
Rule 37    console_function -> METHOD_OF_CLASS_CONSOLE LPAREN expression RPAREN SEMICOLON
Rule 38    predicate -> ID LOGICAL_OPERATOR arithmetic_expression
Rule 39    predicate -> ID LOGICAL_OPERATOR ID
Rule 40    predicate -> predicate LOGICAL_OPERATOR predicate
Rule 41    while -> WHILE LPAREN predicate RPAREN block
Rule 42    if -> IF LPAREN predicate RPAREN block
Rule 43    else -> ELSE block

Terminals, with rules where they appear

ASSIGNMENT_OPERATOR  : 17 18
COMMA                : 32 35
ELSE                 : 43
FUNCTION             : 26
ID                   : 17 18 19 20 24 29 38 39 39
IF                   : 42
LBRACKET             : 2 26
LOGICAL_OPERATOR     : 38 39 40
LPAREN               : 26 29 37 41 42
MATH_OPERATOR        : 19 20 21 22 30
METHOD_OF_CLASS_CONSOLE : 37
NUMBER               : 21 23
RBRACKET             : 2 26
RETURN               : 28
RPAREN               : 26 29 37 41 42
SEMICOLON            : 10 11 17 20 28 37
STRING               : 25
VAR                  : 17 18
WHILE                : 41
error                : 

Nonterminals, with rules where they appear

arithmetic_expression : 12 17 19 21 22 22 33 36 38
block                : 41 42 43 0
body                 : 2
console_function     : 15 16
declaration_with_assignment : 5 6
else                 : 8
expression           : 3 5 7 11 13 16 27 28 30 37
function_body        : 9 26
function_declaration : 4 18
function_implementation : 10 11 30
function_parameters  : 29 32 32
if                   : 7
parameters           : 26 35 35
predicate            : 40 40 41 42
while                : 13 14

Parsing method: LALR

state 0

    (0) S' -> . block
    (1) block -> .
    (2) block -> . LBRACKET body RBRACKET

    $end            reduce using rule 1 (block -> .)
    LBRACKET        shift and go to state 2

    block                          shift and go to state 1

state 1

    (0) S' -> block .



state 2

    (2) block -> LBRACKET . body RBRACKET
    (3) body -> . expression
    (4) body -> . function_declaration
    (5) expression -> . declaration_with_assignment expression
    (6) expression -> . declaration_with_assignment
    (7) expression -> . if expression
    (8) expression -> . else
    (9) expression -> . function_body
    (10) expression -> . function_implementation SEMICOLON
    (11) expression -> . function_implementation SEMICOLON expression
    (12) expression -> . arithmetic_expression
    (13) expression -> . while expression
    (14) expression -> . while
    (15) expression -> . console_function
    (16) expression -> . console_function expression
    (26) function_declaration -> . FUNCTION LPAREN parameters RPAREN LBRACKET function_body RBRACKET
    (17) declaration_with_assignment -> . VAR ID ASSIGNMENT_OPERATOR arithmetic_expression SEMICOLON
    (18) declaration_with_assignment -> . VAR ID ASSIGNMENT_OPERATOR function_declaration
    (42) if -> . IF LPAREN predicate RPAREN block
    (43) else -> . ELSE block
    (27) function_body -> . expression
    (28) function_body -> . RETURN expression SEMICOLON
    (29) function_implementation -> . ID LPAREN function_parameters RPAREN
    (30) function_implementation -> . function_implementation MATH_OPERATOR expression
    (19) arithmetic_expression -> . ID MATH_OPERATOR arithmetic_expression
    (20) arithmetic_expression -> . ID MATH_OPERATOR SEMICOLON
    (21) arithmetic_expression -> . NUMBER MATH_OPERATOR arithmetic_expression
    (22) arithmetic_expression -> . arithmetic_expression MATH_OPERATOR arithmetic_expression
    (23) arithmetic_expression -> . NUMBER
    (24) arithmetic_expression -> . ID
    (25) arithmetic_expression -> . STRING
    (41) while -> . WHILE LPAREN predicate RPAREN block
    (37) console_function -> . METHOD_OF_CLASS_CONSOLE LPAREN expression RPAREN SEMICOLON

    FUNCTION        shift and go to state 6
    VAR             shift and go to state 8
    IF              shift and go to state 9
    ELSE            shift and go to state 10
    RETURN          shift and go to state 5
    ID              shift and go to state 12
    NUMBER          shift and go to state 14
    STRING          shift and go to state 3
    WHILE           shift and go to state 17
    METHOD_OF_CLASS_CONSOLE shift and go to state 19

    function_declaration           shift and go to state 11
    console_function               shift and go to state 13
    function_body                  shift and go to state 4
    while                          shift and go to state 15
    declaration_with_assignment    shift and go to state 16
    arithmetic_expression          shift and go to state 18
    function_implementation        shift and go to state 7
    if                             shift and go to state 21
    else                           shift and go to state 22
    body                           shift and go to state 23
    expression                     shift and go to state 20

state 3

    (25) arithmetic_expression -> STRING .

    MATH_OPERATOR   reduce using rule 25 (arithmetic_expression -> STRING .)
    RBRACKET        reduce using rule 25 (arithmetic_expression -> STRING .)
    SEMICOLON       reduce using rule 25 (arithmetic_expression -> STRING .)
    RPAREN          reduce using rule 25 (arithmetic_expression -> STRING .)
    COMMA           reduce using rule 25 (arithmetic_expression -> STRING .)
    LOGICAL_OPERATOR reduce using rule 25 (arithmetic_expression -> STRING .)


state 4

    (9) expression -> function_body .

    SEMICOLON       reduce using rule 9 (expression -> function_body .)
    MATH_OPERATOR   reduce using rule 9 (expression -> function_body .)
    RBRACKET        reduce using rule 9 (expression -> function_body .)
    RPAREN          reduce using rule 9 (expression -> function_body .)


state 5

    (28) function_body -> RETURN . expression SEMICOLON
    (5) expression -> . declaration_with_assignment expression
    (6) expression -> . declaration_with_assignment
    (7) expression -> . if expression
    (8) expression -> . else
    (9) expression -> . function_body
    (10) expression -> . function_implementation SEMICOLON
    (11) expression -> . function_implementation SEMICOLON expression
    (12) expression -> . arithmetic_expression
    (13) expression -> . while expression
    (14) expression -> . while
    (15) expression -> . console_function
    (16) expression -> . console_function expression
    (17) declaration_with_assignment -> . VAR ID ASSIGNMENT_OPERATOR arithmetic_expression SEMICOLON
    (18) declaration_with_assignment -> . VAR ID ASSIGNMENT_OPERATOR function_declaration
    (42) if -> . IF LPAREN predicate RPAREN block
    (43) else -> . ELSE block
    (27) function_body -> . expression
    (28) function_body -> . RETURN expression SEMICOLON
    (29) function_implementation -> . ID LPAREN function_parameters RPAREN
    (30) function_implementation -> . function_implementation MATH_OPERATOR expression
    (19) arithmetic_expression -> . ID MATH_OPERATOR arithmetic_expression
    (20) arithmetic_expression -> . ID MATH_OPERATOR SEMICOLON
    (21) arithmetic_expression -> . NUMBER MATH_OPERATOR arithmetic_expression
    (22) arithmetic_expression -> . arithmetic_expression MATH_OPERATOR arithmetic_expression
    (23) arithmetic_expression -> . NUMBER
    (24) arithmetic_expression -> . ID
    (25) arithmetic_expression -> . STRING
    (41) while -> . WHILE LPAREN predicate RPAREN block
    (37) console_function -> . METHOD_OF_CLASS_CONSOLE LPAREN expression RPAREN SEMICOLON

    VAR             shift and go to state 8
    IF              shift and go to state 9
    ELSE            shift and go to state 10
    RETURN          shift and go to state 5
    ID              shift and go to state 12
    NUMBER          shift and go to state 14
    STRING          shift and go to state 3
    WHILE           shift and go to state 17
    METHOD_OF_CLASS_CONSOLE shift and go to state 19

    console_function               shift and go to state 13
    function_body                  shift and go to state 4
    while                          shift and go to state 15
    function_implementation        shift and go to state 7
    arithmetic_expression          shift and go to state 18
    declaration_with_assignment    shift and go to state 16
    if                             shift and go to state 21
    else                           shift and go to state 22
    expression                     shift and go to state 24

state 6

    (26) function_declaration -> FUNCTION . LPAREN parameters RPAREN LBRACKET function_body RBRACKET

    LPAREN          shift and go to state 25


state 7

    (10) expression -> function_implementation . SEMICOLON
    (11) expression -> function_implementation . SEMICOLON expression
    (30) function_implementation -> function_implementation . MATH_OPERATOR expression

    SEMICOLON       shift and go to state 27
    MATH_OPERATOR   shift and go to state 26


state 8

    (17) declaration_with_assignment -> VAR . ID ASSIGNMENT_OPERATOR arithmetic_expression SEMICOLON
    (18) declaration_with_assignment -> VAR . ID ASSIGNMENT_OPERATOR function_declaration

    ID              shift and go to state 28


state 9

    (42) if -> IF . LPAREN predicate RPAREN block

    LPAREN          shift and go to state 29


state 10

    (43) else -> ELSE . block
    (1) block -> .
    (2) block -> . LBRACKET body RBRACKET

    RBRACKET        reduce using rule 1 (block -> .)
    SEMICOLON       reduce using rule 1 (block -> .)
    MATH_OPERATOR   reduce using rule 1 (block -> .)
    RPAREN          reduce using rule 1 (block -> .)
    LBRACKET        shift and go to state 2

    block                          shift and go to state 30

state 11

    (4) body -> function_declaration .

    RBRACKET        reduce using rule 4 (body -> function_declaration .)


state 12

    (29) function_implementation -> ID . LPAREN function_parameters RPAREN
    (19) arithmetic_expression -> ID . MATH_OPERATOR arithmetic_expression
    (20) arithmetic_expression -> ID . MATH_OPERATOR SEMICOLON
    (24) arithmetic_expression -> ID .

  ! shift/reduce conflict for MATH_OPERATOR resolved as shift
    LPAREN          shift and go to state 31
    MATH_OPERATOR   shift and go to state 32
    RBRACKET        reduce using rule 24 (arithmetic_expression -> ID .)
    SEMICOLON       reduce using rule 24 (arithmetic_expression -> ID .)
    RPAREN          reduce using rule 24 (arithmetic_expression -> ID .)

  ! MATH_OPERATOR   [ reduce using rule 24 (arithmetic_expression -> ID .) ]


state 13

    (15) expression -> console_function .
    (16) expression -> console_function . expression
    (5) expression -> . declaration_with_assignment expression
    (6) expression -> . declaration_with_assignment
    (7) expression -> . if expression
    (8) expression -> . else
    (9) expression -> . function_body
    (10) expression -> . function_implementation SEMICOLON
    (11) expression -> . function_implementation SEMICOLON expression
    (12) expression -> . arithmetic_expression
    (13) expression -> . while expression
    (14) expression -> . while
    (15) expression -> . console_function
    (16) expression -> . console_function expression
    (17) declaration_with_assignment -> . VAR ID ASSIGNMENT_OPERATOR arithmetic_expression SEMICOLON
    (18) declaration_with_assignment -> . VAR ID ASSIGNMENT_OPERATOR function_declaration
    (42) if -> . IF LPAREN predicate RPAREN block
    (43) else -> . ELSE block
    (27) function_body -> . expression
    (28) function_body -> . RETURN expression SEMICOLON
    (29) function_implementation -> . ID LPAREN function_parameters RPAREN
    (30) function_implementation -> . function_implementation MATH_OPERATOR expression
    (19) arithmetic_expression -> . ID MATH_OPERATOR arithmetic_expression
    (20) arithmetic_expression -> . ID MATH_OPERATOR SEMICOLON
    (21) arithmetic_expression -> . NUMBER MATH_OPERATOR arithmetic_expression
    (22) arithmetic_expression -> . arithmetic_expression MATH_OPERATOR arithmetic_expression
    (23) arithmetic_expression -> . NUMBER
    (24) arithmetic_expression -> . ID
    (25) arithmetic_expression -> . STRING
    (41) while -> . WHILE LPAREN predicate RPAREN block
    (37) console_function -> . METHOD_OF_CLASS_CONSOLE LPAREN expression RPAREN SEMICOLON

    SEMICOLON       reduce using rule 15 (expression -> console_function .)
    MATH_OPERATOR   reduce using rule 15 (expression -> console_function .)
    RBRACKET        reduce using rule 15 (expression -> console_function .)
    RPAREN          reduce using rule 15 (expression -> console_function .)
    VAR             shift and go to state 8
    IF              shift and go to state 9
    ELSE            shift and go to state 10
    RETURN          shift and go to state 5
    ID              shift and go to state 12
    NUMBER          shift and go to state 14
    STRING          shift and go to state 3
    WHILE           shift and go to state 17
    METHOD_OF_CLASS_CONSOLE shift and go to state 19

    console_function               shift and go to state 13
    function_body                  shift and go to state 4
    while                          shift and go to state 15
    function_implementation        shift and go to state 7
    arithmetic_expression          shift and go to state 18
    declaration_with_assignment    shift and go to state 16
    if                             shift and go to state 21
    else                           shift and go to state 22
    expression                     shift and go to state 33

state 14

    (21) arithmetic_expression -> NUMBER . MATH_OPERATOR arithmetic_expression
    (23) arithmetic_expression -> NUMBER .

  ! shift/reduce conflict for MATH_OPERATOR resolved as shift
    MATH_OPERATOR   shift and go to state 34
    RBRACKET        reduce using rule 23 (arithmetic_expression -> NUMBER .)
    SEMICOLON       reduce using rule 23 (arithmetic_expression -> NUMBER .)
    RPAREN          reduce using rule 23 (arithmetic_expression -> NUMBER .)
    COMMA           reduce using rule 23 (arithmetic_expression -> NUMBER .)
    LOGICAL_OPERATOR reduce using rule 23 (arithmetic_expression -> NUMBER .)

  ! MATH_OPERATOR   [ reduce using rule 23 (arithmetic_expression -> NUMBER .) ]


state 15

    (13) expression -> while . expression
    (14) expression -> while .
    (5) expression -> . declaration_with_assignment expression
    (6) expression -> . declaration_with_assignment
    (7) expression -> . if expression
    (8) expression -> . else
    (9) expression -> . function_body
    (10) expression -> . function_implementation SEMICOLON
    (11) expression -> . function_implementation SEMICOLON expression
    (12) expression -> . arithmetic_expression
    (13) expression -> . while expression
    (14) expression -> . while
    (15) expression -> . console_function
    (16) expression -> . console_function expression
    (17) declaration_with_assignment -> . VAR ID ASSIGNMENT_OPERATOR arithmetic_expression SEMICOLON
    (18) declaration_with_assignment -> . VAR ID ASSIGNMENT_OPERATOR function_declaration
    (42) if -> . IF LPAREN predicate RPAREN block
    (43) else -> . ELSE block
    (27) function_body -> . expression
    (28) function_body -> . RETURN expression SEMICOLON
    (29) function_implementation -> . ID LPAREN function_parameters RPAREN
    (30) function_implementation -> . function_implementation MATH_OPERATOR expression
    (19) arithmetic_expression -> . ID MATH_OPERATOR arithmetic_expression
    (20) arithmetic_expression -> . ID MATH_OPERATOR SEMICOLON
    (21) arithmetic_expression -> . NUMBER MATH_OPERATOR arithmetic_expression
    (22) arithmetic_expression -> . arithmetic_expression MATH_OPERATOR arithmetic_expression
    (23) arithmetic_expression -> . NUMBER
    (24) arithmetic_expression -> . ID
    (25) arithmetic_expression -> . STRING
    (41) while -> . WHILE LPAREN predicate RPAREN block
    (37) console_function -> . METHOD_OF_CLASS_CONSOLE LPAREN expression RPAREN SEMICOLON

    SEMICOLON       reduce using rule 14 (expression -> while .)
    MATH_OPERATOR   reduce using rule 14 (expression -> while .)
    RBRACKET        reduce using rule 14 (expression -> while .)
    RPAREN          reduce using rule 14 (expression -> while .)
    VAR             shift and go to state 8
    IF              shift and go to state 9
    ELSE            shift and go to state 10
    RETURN          shift and go to state 5
    ID              shift and go to state 12
    NUMBER          shift and go to state 14
    STRING          shift and go to state 3
    WHILE           shift and go to state 17
    METHOD_OF_CLASS_CONSOLE shift and go to state 19

    console_function               shift and go to state 13
    while                          shift and go to state 15
    function_body                  shift and go to state 4
    function_implementation        shift and go to state 7
    arithmetic_expression          shift and go to state 18
    declaration_with_assignment    shift and go to state 16
    if                             shift and go to state 21
    else                           shift and go to state 22
    expression                     shift and go to state 35

state 16

    (5) expression -> declaration_with_assignment . expression
    (6) expression -> declaration_with_assignment .
    (5) expression -> . declaration_with_assignment expression
    (6) expression -> . declaration_with_assignment
    (7) expression -> . if expression
    (8) expression -> . else
    (9) expression -> . function_body
    (10) expression -> . function_implementation SEMICOLON
    (11) expression -> . function_implementation SEMICOLON expression
    (12) expression -> . arithmetic_expression
    (13) expression -> . while expression
    (14) expression -> . while
    (15) expression -> . console_function
    (16) expression -> . console_function expression
    (17) declaration_with_assignment -> . VAR ID ASSIGNMENT_OPERATOR arithmetic_expression SEMICOLON
    (18) declaration_with_assignment -> . VAR ID ASSIGNMENT_OPERATOR function_declaration
    (42) if -> . IF LPAREN predicate RPAREN block
    (43) else -> . ELSE block
    (27) function_body -> . expression
    (28) function_body -> . RETURN expression SEMICOLON
    (29) function_implementation -> . ID LPAREN function_parameters RPAREN
    (30) function_implementation -> . function_implementation MATH_OPERATOR expression
    (19) arithmetic_expression -> . ID MATH_OPERATOR arithmetic_expression
    (20) arithmetic_expression -> . ID MATH_OPERATOR SEMICOLON
    (21) arithmetic_expression -> . NUMBER MATH_OPERATOR arithmetic_expression
    (22) arithmetic_expression -> . arithmetic_expression MATH_OPERATOR arithmetic_expression
    (23) arithmetic_expression -> . NUMBER
    (24) arithmetic_expression -> . ID
    (25) arithmetic_expression -> . STRING
    (41) while -> . WHILE LPAREN predicate RPAREN block
    (37) console_function -> . METHOD_OF_CLASS_CONSOLE LPAREN expression RPAREN SEMICOLON

    SEMICOLON       reduce using rule 6 (expression -> declaration_with_assignment .)
    MATH_OPERATOR   reduce using rule 6 (expression -> declaration_with_assignment .)
    RBRACKET        reduce using rule 6 (expression -> declaration_with_assignment .)
    RPAREN          reduce using rule 6 (expression -> declaration_with_assignment .)
    VAR             shift and go to state 8
    IF              shift and go to state 9
    ELSE            shift and go to state 10
    RETURN          shift and go to state 5
    ID              shift and go to state 12
    NUMBER          shift and go to state 14
    STRING          shift and go to state 3
    WHILE           shift and go to state 17
    METHOD_OF_CLASS_CONSOLE shift and go to state 19

    console_function               shift and go to state 13
    function_body                  shift and go to state 4
    while                          shift and go to state 15
    function_implementation        shift and go to state 7
    arithmetic_expression          shift and go to state 18
    declaration_with_assignment    shift and go to state 16
    if                             shift and go to state 21
    else                           shift and go to state 22
    expression                     shift and go to state 36

state 17

    (41) while -> WHILE . LPAREN predicate RPAREN block

    LPAREN          shift and go to state 37


state 18

    (12) expression -> arithmetic_expression .
    (22) arithmetic_expression -> arithmetic_expression . MATH_OPERATOR arithmetic_expression

  ! shift/reduce conflict for MATH_OPERATOR resolved as shift
    SEMICOLON       reduce using rule 12 (expression -> arithmetic_expression .)
    RBRACKET        reduce using rule 12 (expression -> arithmetic_expression .)
    RPAREN          reduce using rule 12 (expression -> arithmetic_expression .)
    MATH_OPERATOR   shift and go to state 38

  ! MATH_OPERATOR   [ reduce using rule 12 (expression -> arithmetic_expression .) ]


state 19

    (37) console_function -> METHOD_OF_CLASS_CONSOLE . LPAREN expression RPAREN SEMICOLON

    LPAREN          shift and go to state 39


state 20

    (3) body -> expression .
    (27) function_body -> expression .

  ! reduce/reduce conflict for RBRACKET resolved using rule 3 (body -> expression .)
    RBRACKET        reduce using rule 3 (body -> expression .)

  ! RBRACKET        [ reduce using rule 27 (function_body -> expression .) ]


state 21

    (7) expression -> if . expression
    (5) expression -> . declaration_with_assignment expression
    (6) expression -> . declaration_with_assignment
    (7) expression -> . if expression
    (8) expression -> . else
    (9) expression -> . function_body
    (10) expression -> . function_implementation SEMICOLON
    (11) expression -> . function_implementation SEMICOLON expression
    (12) expression -> . arithmetic_expression
    (13) expression -> . while expression
    (14) expression -> . while
    (15) expression -> . console_function
    (16) expression -> . console_function expression
    (17) declaration_with_assignment -> . VAR ID ASSIGNMENT_OPERATOR arithmetic_expression SEMICOLON
    (18) declaration_with_assignment -> . VAR ID ASSIGNMENT_OPERATOR function_declaration
    (42) if -> . IF LPAREN predicate RPAREN block
    (43) else -> . ELSE block
    (27) function_body -> . expression
    (28) function_body -> . RETURN expression SEMICOLON
    (29) function_implementation -> . ID LPAREN function_parameters RPAREN
    (30) function_implementation -> . function_implementation MATH_OPERATOR expression
    (19) arithmetic_expression -> . ID MATH_OPERATOR arithmetic_expression
    (20) arithmetic_expression -> . ID MATH_OPERATOR SEMICOLON
    (21) arithmetic_expression -> . NUMBER MATH_OPERATOR arithmetic_expression
    (22) arithmetic_expression -> . arithmetic_expression MATH_OPERATOR arithmetic_expression
    (23) arithmetic_expression -> . NUMBER
    (24) arithmetic_expression -> . ID
    (25) arithmetic_expression -> . STRING
    (41) while -> . WHILE LPAREN predicate RPAREN block
    (37) console_function -> . METHOD_OF_CLASS_CONSOLE LPAREN expression RPAREN SEMICOLON

    VAR             shift and go to state 8
    IF              shift and go to state 9
    ELSE            shift and go to state 10
    RETURN          shift and go to state 5
    ID              shift and go to state 12
    NUMBER          shift and go to state 14
    STRING          shift and go to state 3
    WHILE           shift and go to state 17
    METHOD_OF_CLASS_CONSOLE shift and go to state 19

    console_function               shift and go to state 13
    function_body                  shift and go to state 4
    while                          shift and go to state 15
    function_implementation        shift and go to state 7
    arithmetic_expression          shift and go to state 18
    declaration_with_assignment    shift and go to state 16
    if                             shift and go to state 21
    else                           shift and go to state 22
    expression                     shift and go to state 40

state 22

    (8) expression -> else .

    SEMICOLON       reduce using rule 8 (expression -> else .)
    MATH_OPERATOR   reduce using rule 8 (expression -> else .)
    RBRACKET        reduce using rule 8 (expression -> else .)
    RPAREN          reduce using rule 8 (expression -> else .)


state 23

    (2) block -> LBRACKET body . RBRACKET

    RBRACKET        shift and go to state 41


state 24

    (28) function_body -> RETURN expression . SEMICOLON
    (27) function_body -> expression .

  ! shift/reduce conflict for SEMICOLON resolved as shift
    SEMICOLON       shift and go to state 42

  ! SEMICOLON       [ reduce using rule 27 (function_body -> expression .) ]


state 25

    (26) function_declaration -> FUNCTION LPAREN . parameters RPAREN LBRACKET function_body RBRACKET
    (34) parameters -> .
    (35) parameters -> . parameters COMMA parameters
    (36) parameters -> . arithmetic_expression
    (19) arithmetic_expression -> . ID MATH_OPERATOR arithmetic_expression
    (20) arithmetic_expression -> . ID MATH_OPERATOR SEMICOLON
    (21) arithmetic_expression -> . NUMBER MATH_OPERATOR arithmetic_expression
    (22) arithmetic_expression -> . arithmetic_expression MATH_OPERATOR arithmetic_expression
    (23) arithmetic_expression -> . NUMBER
    (24) arithmetic_expression -> . ID
    (25) arithmetic_expression -> . STRING

    RPAREN          reduce using rule 34 (parameters -> .)
    COMMA           reduce using rule 34 (parameters -> .)
    ID              shift and go to state 43
    NUMBER          shift and go to state 14
    STRING          shift and go to state 3

    parameters                     shift and go to state 44
    arithmetic_expression          shift and go to state 45

state 26

    (30) function_implementation -> function_implementation MATH_OPERATOR . expression
    (5) expression -> . declaration_with_assignment expression
    (6) expression -> . declaration_with_assignment
    (7) expression -> . if expression
    (8) expression -> . else
    (9) expression -> . function_body
    (10) expression -> . function_implementation SEMICOLON
    (11) expression -> . function_implementation SEMICOLON expression
    (12) expression -> . arithmetic_expression
    (13) expression -> . while expression
    (14) expression -> . while
    (15) expression -> . console_function
    (16) expression -> . console_function expression
    (17) declaration_with_assignment -> . VAR ID ASSIGNMENT_OPERATOR arithmetic_expression SEMICOLON
    (18) declaration_with_assignment -> . VAR ID ASSIGNMENT_OPERATOR function_declaration
    (42) if -> . IF LPAREN predicate RPAREN block
    (43) else -> . ELSE block
    (27) function_body -> . expression
    (28) function_body -> . RETURN expression SEMICOLON
    (29) function_implementation -> . ID LPAREN function_parameters RPAREN
    (30) function_implementation -> . function_implementation MATH_OPERATOR expression
    (19) arithmetic_expression -> . ID MATH_OPERATOR arithmetic_expression
    (20) arithmetic_expression -> . ID MATH_OPERATOR SEMICOLON
    (21) arithmetic_expression -> . NUMBER MATH_OPERATOR arithmetic_expression
    (22) arithmetic_expression -> . arithmetic_expression MATH_OPERATOR arithmetic_expression
    (23) arithmetic_expression -> . NUMBER
    (24) arithmetic_expression -> . ID
    (25) arithmetic_expression -> . STRING
    (41) while -> . WHILE LPAREN predicate RPAREN block
    (37) console_function -> . METHOD_OF_CLASS_CONSOLE LPAREN expression RPAREN SEMICOLON

    VAR             shift and go to state 8
    IF              shift and go to state 9
    ELSE            shift and go to state 10
    RETURN          shift and go to state 5
    ID              shift and go to state 12
    NUMBER          shift and go to state 14
    STRING          shift and go to state 3
    WHILE           shift and go to state 17
    METHOD_OF_CLASS_CONSOLE shift and go to state 19

    console_function               shift and go to state 13
    function_body                  shift and go to state 4
    while                          shift and go to state 15
    function_implementation        shift and go to state 7
    arithmetic_expression          shift and go to state 18
    declaration_with_assignment    shift and go to state 16
    if                             shift and go to state 21
    else                           shift and go to state 22
    expression                     shift and go to state 46

state 27

    (10) expression -> function_implementation SEMICOLON .
    (11) expression -> function_implementation SEMICOLON . expression
    (5) expression -> . declaration_with_assignment expression
    (6) expression -> . declaration_with_assignment
    (7) expression -> . if expression
    (8) expression -> . else
    (9) expression -> . function_body
    (10) expression -> . function_implementation SEMICOLON
    (11) expression -> . function_implementation SEMICOLON expression
    (12) expression -> . arithmetic_expression
    (13) expression -> . while expression
    (14) expression -> . while
    (15) expression -> . console_function
    (16) expression -> . console_function expression
    (17) declaration_with_assignment -> . VAR ID ASSIGNMENT_OPERATOR arithmetic_expression SEMICOLON
    (18) declaration_with_assignment -> . VAR ID ASSIGNMENT_OPERATOR function_declaration
    (42) if -> . IF LPAREN predicate RPAREN block
    (43) else -> . ELSE block
    (27) function_body -> . expression
    (28) function_body -> . RETURN expression SEMICOLON
    (29) function_implementation -> . ID LPAREN function_parameters RPAREN
    (30) function_implementation -> . function_implementation MATH_OPERATOR expression
    (19) arithmetic_expression -> . ID MATH_OPERATOR arithmetic_expression
    (20) arithmetic_expression -> . ID MATH_OPERATOR SEMICOLON
    (21) arithmetic_expression -> . NUMBER MATH_OPERATOR arithmetic_expression
    (22) arithmetic_expression -> . arithmetic_expression MATH_OPERATOR arithmetic_expression
    (23) arithmetic_expression -> . NUMBER
    (24) arithmetic_expression -> . ID
    (25) arithmetic_expression -> . STRING
    (41) while -> . WHILE LPAREN predicate RPAREN block
    (37) console_function -> . METHOD_OF_CLASS_CONSOLE LPAREN expression RPAREN SEMICOLON

    SEMICOLON       reduce using rule 10 (expression -> function_implementation SEMICOLON .)
    MATH_OPERATOR   reduce using rule 10 (expression -> function_implementation SEMICOLON .)
    RBRACKET        reduce using rule 10 (expression -> function_implementation SEMICOLON .)
    RPAREN          reduce using rule 10 (expression -> function_implementation SEMICOLON .)
    VAR             shift and go to state 8
    IF              shift and go to state 9
    ELSE            shift and go to state 10
    RETURN          shift and go to state 5
    ID              shift and go to state 12
    NUMBER          shift and go to state 14
    STRING          shift and go to state 3
    WHILE           shift and go to state 17
    METHOD_OF_CLASS_CONSOLE shift and go to state 19

    console_function               shift and go to state 13
    function_body                  shift and go to state 4
    while                          shift and go to state 15
    function_implementation        shift and go to state 7
    arithmetic_expression          shift and go to state 18
    declaration_with_assignment    shift and go to state 16
    if                             shift and go to state 21
    else                           shift and go to state 22
    expression                     shift and go to state 47

state 28

    (17) declaration_with_assignment -> VAR ID . ASSIGNMENT_OPERATOR arithmetic_expression SEMICOLON
    (18) declaration_with_assignment -> VAR ID . ASSIGNMENT_OPERATOR function_declaration

    ASSIGNMENT_OPERATOR shift and go to state 48


state 29

    (42) if -> IF LPAREN . predicate RPAREN block
    (38) predicate -> . ID LOGICAL_OPERATOR arithmetic_expression
    (39) predicate -> . ID LOGICAL_OPERATOR ID
    (40) predicate -> . predicate LOGICAL_OPERATOR predicate

    ID              shift and go to state 50

    predicate                      shift and go to state 49

state 30

    (43) else -> ELSE block .

    RBRACKET        reduce using rule 43 (else -> ELSE block .)
    SEMICOLON       reduce using rule 43 (else -> ELSE block .)
    MATH_OPERATOR   reduce using rule 43 (else -> ELSE block .)
    RPAREN          reduce using rule 43 (else -> ELSE block .)


state 31

    (29) function_implementation -> ID LPAREN . function_parameters RPAREN
    (31) function_parameters -> .
    (32) function_parameters -> . function_parameters COMMA function_parameters
    (33) function_parameters -> . arithmetic_expression
    (19) arithmetic_expression -> . ID MATH_OPERATOR arithmetic_expression
    (20) arithmetic_expression -> . ID MATH_OPERATOR SEMICOLON
    (21) arithmetic_expression -> . NUMBER MATH_OPERATOR arithmetic_expression
    (22) arithmetic_expression -> . arithmetic_expression MATH_OPERATOR arithmetic_expression
    (23) arithmetic_expression -> . NUMBER
    (24) arithmetic_expression -> . ID
    (25) arithmetic_expression -> . STRING

    RPAREN          reduce using rule 31 (function_parameters -> .)
    COMMA           reduce using rule 31 (function_parameters -> .)
    ID              shift and go to state 43
    NUMBER          shift and go to state 14
    STRING          shift and go to state 3

    arithmetic_expression          shift and go to state 51
    function_parameters            shift and go to state 52

state 32

    (19) arithmetic_expression -> ID MATH_OPERATOR . arithmetic_expression
    (20) arithmetic_expression -> ID MATH_OPERATOR . SEMICOLON
    (19) arithmetic_expression -> . ID MATH_OPERATOR arithmetic_expression
    (20) arithmetic_expression -> . ID MATH_OPERATOR SEMICOLON
    (21) arithmetic_expression -> . NUMBER MATH_OPERATOR arithmetic_expression
    (22) arithmetic_expression -> . arithmetic_expression MATH_OPERATOR arithmetic_expression
    (23) arithmetic_expression -> . NUMBER
    (24) arithmetic_expression -> . ID
    (25) arithmetic_expression -> . STRING

    SEMICOLON       shift and go to state 54
    ID              shift and go to state 43
    NUMBER          shift and go to state 14
    STRING          shift and go to state 3

    arithmetic_expression          shift and go to state 53

state 33

    (16) expression -> console_function expression .
    (27) function_body -> expression .

  ! reduce/reduce conflict for RBRACKET resolved using rule 16 (expression -> console_function expression .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 16 (expression -> console_function expression .)
  ! reduce/reduce conflict for MATH_OPERATOR resolved using rule 16 (expression -> console_function expression .)
  ! reduce/reduce conflict for RPAREN resolved using rule 16 (expression -> console_function expression .)
    SEMICOLON       reduce using rule 16 (expression -> console_function expression .)
    MATH_OPERATOR   reduce using rule 16 (expression -> console_function expression .)
    RBRACKET        reduce using rule 16 (expression -> console_function expression .)
    RPAREN          reduce using rule 16 (expression -> console_function expression .)

  ! RBRACKET        [ reduce using rule 27 (function_body -> expression .) ]
  ! SEMICOLON       [ reduce using rule 27 (function_body -> expression .) ]
  ! MATH_OPERATOR   [ reduce using rule 27 (function_body -> expression .) ]
  ! RPAREN          [ reduce using rule 27 (function_body -> expression .) ]


state 34

    (21) arithmetic_expression -> NUMBER MATH_OPERATOR . arithmetic_expression
    (19) arithmetic_expression -> . ID MATH_OPERATOR arithmetic_expression
    (20) arithmetic_expression -> . ID MATH_OPERATOR SEMICOLON
    (21) arithmetic_expression -> . NUMBER MATH_OPERATOR arithmetic_expression
    (22) arithmetic_expression -> . arithmetic_expression MATH_OPERATOR arithmetic_expression
    (23) arithmetic_expression -> . NUMBER
    (24) arithmetic_expression -> . ID
    (25) arithmetic_expression -> . STRING

    ID              shift and go to state 43
    NUMBER          shift and go to state 14
    STRING          shift and go to state 3

    arithmetic_expression          shift and go to state 55

state 35

    (13) expression -> while expression .
    (27) function_body -> expression .

  ! reduce/reduce conflict for RBRACKET resolved using rule 13 (expression -> while expression .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 13 (expression -> while expression .)
  ! reduce/reduce conflict for MATH_OPERATOR resolved using rule 13 (expression -> while expression .)
  ! reduce/reduce conflict for RPAREN resolved using rule 13 (expression -> while expression .)
    SEMICOLON       reduce using rule 13 (expression -> while expression .)
    MATH_OPERATOR   reduce using rule 13 (expression -> while expression .)
    RBRACKET        reduce using rule 13 (expression -> while expression .)
    RPAREN          reduce using rule 13 (expression -> while expression .)

  ! RBRACKET        [ reduce using rule 27 (function_body -> expression .) ]
  ! SEMICOLON       [ reduce using rule 27 (function_body -> expression .) ]
  ! MATH_OPERATOR   [ reduce using rule 27 (function_body -> expression .) ]
  ! RPAREN          [ reduce using rule 27 (function_body -> expression .) ]


state 36

    (5) expression -> declaration_with_assignment expression .
    (27) function_body -> expression .

  ! reduce/reduce conflict for RBRACKET resolved using rule 5 (expression -> declaration_with_assignment expression .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 5 (expression -> declaration_with_assignment expression .)
  ! reduce/reduce conflict for MATH_OPERATOR resolved using rule 5 (expression -> declaration_with_assignment expression .)
  ! reduce/reduce conflict for RPAREN resolved using rule 5 (expression -> declaration_with_assignment expression .)
    SEMICOLON       reduce using rule 5 (expression -> declaration_with_assignment expression .)
    MATH_OPERATOR   reduce using rule 5 (expression -> declaration_with_assignment expression .)
    RBRACKET        reduce using rule 5 (expression -> declaration_with_assignment expression .)
    RPAREN          reduce using rule 5 (expression -> declaration_with_assignment expression .)

  ! RBRACKET        [ reduce using rule 27 (function_body -> expression .) ]
  ! SEMICOLON       [ reduce using rule 27 (function_body -> expression .) ]
  ! MATH_OPERATOR   [ reduce using rule 27 (function_body -> expression .) ]
  ! RPAREN          [ reduce using rule 27 (function_body -> expression .) ]


state 37

    (41) while -> WHILE LPAREN . predicate RPAREN block
    (38) predicate -> . ID LOGICAL_OPERATOR arithmetic_expression
    (39) predicate -> . ID LOGICAL_OPERATOR ID
    (40) predicate -> . predicate LOGICAL_OPERATOR predicate

    ID              shift and go to state 50

    predicate                      shift and go to state 56

state 38

    (22) arithmetic_expression -> arithmetic_expression MATH_OPERATOR . arithmetic_expression
    (19) arithmetic_expression -> . ID MATH_OPERATOR arithmetic_expression
    (20) arithmetic_expression -> . ID MATH_OPERATOR SEMICOLON
    (21) arithmetic_expression -> . NUMBER MATH_OPERATOR arithmetic_expression
    (22) arithmetic_expression -> . arithmetic_expression MATH_OPERATOR arithmetic_expression
    (23) arithmetic_expression -> . NUMBER
    (24) arithmetic_expression -> . ID
    (25) arithmetic_expression -> . STRING

    ID              shift and go to state 43
    NUMBER          shift and go to state 14
    STRING          shift and go to state 3

    arithmetic_expression          shift and go to state 57

state 39

    (37) console_function -> METHOD_OF_CLASS_CONSOLE LPAREN . expression RPAREN SEMICOLON
    (5) expression -> . declaration_with_assignment expression
    (6) expression -> . declaration_with_assignment
    (7) expression -> . if expression
    (8) expression -> . else
    (9) expression -> . function_body
    (10) expression -> . function_implementation SEMICOLON
    (11) expression -> . function_implementation SEMICOLON expression
    (12) expression -> . arithmetic_expression
    (13) expression -> . while expression
    (14) expression -> . while
    (15) expression -> . console_function
    (16) expression -> . console_function expression
    (17) declaration_with_assignment -> . VAR ID ASSIGNMENT_OPERATOR arithmetic_expression SEMICOLON
    (18) declaration_with_assignment -> . VAR ID ASSIGNMENT_OPERATOR function_declaration
    (42) if -> . IF LPAREN predicate RPAREN block
    (43) else -> . ELSE block
    (27) function_body -> . expression
    (28) function_body -> . RETURN expression SEMICOLON
    (29) function_implementation -> . ID LPAREN function_parameters RPAREN
    (30) function_implementation -> . function_implementation MATH_OPERATOR expression
    (19) arithmetic_expression -> . ID MATH_OPERATOR arithmetic_expression
    (20) arithmetic_expression -> . ID MATH_OPERATOR SEMICOLON
    (21) arithmetic_expression -> . NUMBER MATH_OPERATOR arithmetic_expression
    (22) arithmetic_expression -> . arithmetic_expression MATH_OPERATOR arithmetic_expression
    (23) arithmetic_expression -> . NUMBER
    (24) arithmetic_expression -> . ID
    (25) arithmetic_expression -> . STRING
    (41) while -> . WHILE LPAREN predicate RPAREN block
    (37) console_function -> . METHOD_OF_CLASS_CONSOLE LPAREN expression RPAREN SEMICOLON

    VAR             shift and go to state 8
    IF              shift and go to state 9
    ELSE            shift and go to state 10
    RETURN          shift and go to state 5
    ID              shift and go to state 12
    NUMBER          shift and go to state 14
    STRING          shift and go to state 3
    WHILE           shift and go to state 17
    METHOD_OF_CLASS_CONSOLE shift and go to state 19

    console_function               shift and go to state 13
    function_body                  shift and go to state 4
    while                          shift and go to state 15
    function_implementation        shift and go to state 7
    arithmetic_expression          shift and go to state 18
    declaration_with_assignment    shift and go to state 16
    if                             shift and go to state 21
    else                           shift and go to state 22
    expression                     shift and go to state 58

state 40

    (7) expression -> if expression .
    (27) function_body -> expression .

  ! reduce/reduce conflict for RBRACKET resolved using rule 7 (expression -> if expression .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 7 (expression -> if expression .)
  ! reduce/reduce conflict for MATH_OPERATOR resolved using rule 7 (expression -> if expression .)
  ! reduce/reduce conflict for RPAREN resolved using rule 7 (expression -> if expression .)
    SEMICOLON       reduce using rule 7 (expression -> if expression .)
    MATH_OPERATOR   reduce using rule 7 (expression -> if expression .)
    RBRACKET        reduce using rule 7 (expression -> if expression .)
    RPAREN          reduce using rule 7 (expression -> if expression .)

  ! RBRACKET        [ reduce using rule 27 (function_body -> expression .) ]
  ! SEMICOLON       [ reduce using rule 27 (function_body -> expression .) ]
  ! MATH_OPERATOR   [ reduce using rule 27 (function_body -> expression .) ]
  ! RPAREN          [ reduce using rule 27 (function_body -> expression .) ]


state 41

    (2) block -> LBRACKET body RBRACKET .

    VAR             reduce using rule 2 (block -> LBRACKET body RBRACKET .)
    IF              reduce using rule 2 (block -> LBRACKET body RBRACKET .)
    ELSE            reduce using rule 2 (block -> LBRACKET body RBRACKET .)
    RETURN          reduce using rule 2 (block -> LBRACKET body RBRACKET .)
    ID              reduce using rule 2 (block -> LBRACKET body RBRACKET .)
    NUMBER          reduce using rule 2 (block -> LBRACKET body RBRACKET .)
    STRING          reduce using rule 2 (block -> LBRACKET body RBRACKET .)
    WHILE           reduce using rule 2 (block -> LBRACKET body RBRACKET .)
    METHOD_OF_CLASS_CONSOLE reduce using rule 2 (block -> LBRACKET body RBRACKET .)
    RBRACKET        reduce using rule 2 (block -> LBRACKET body RBRACKET .)
    SEMICOLON       reduce using rule 2 (block -> LBRACKET body RBRACKET .)
    MATH_OPERATOR   reduce using rule 2 (block -> LBRACKET body RBRACKET .)
    RPAREN          reduce using rule 2 (block -> LBRACKET body RBRACKET .)
    $end            reduce using rule 2 (block -> LBRACKET body RBRACKET .)


state 42

    (28) function_body -> RETURN expression SEMICOLON .

    RBRACKET        reduce using rule 28 (function_body -> RETURN expression SEMICOLON .)
    SEMICOLON       reduce using rule 28 (function_body -> RETURN expression SEMICOLON .)
    MATH_OPERATOR   reduce using rule 28 (function_body -> RETURN expression SEMICOLON .)
    RPAREN          reduce using rule 28 (function_body -> RETURN expression SEMICOLON .)


state 43

    (19) arithmetic_expression -> ID . MATH_OPERATOR arithmetic_expression
    (20) arithmetic_expression -> ID . MATH_OPERATOR SEMICOLON
    (24) arithmetic_expression -> ID .

  ! shift/reduce conflict for MATH_OPERATOR resolved as shift
    MATH_OPERATOR   shift and go to state 32
    RBRACKET        reduce using rule 24 (arithmetic_expression -> ID .)
    SEMICOLON       reduce using rule 24 (arithmetic_expression -> ID .)
    RPAREN          reduce using rule 24 (arithmetic_expression -> ID .)
    COMMA           reduce using rule 24 (arithmetic_expression -> ID .)
    LOGICAL_OPERATOR reduce using rule 24 (arithmetic_expression -> ID .)

  ! MATH_OPERATOR   [ reduce using rule 24 (arithmetic_expression -> ID .) ]


state 44

    (26) function_declaration -> FUNCTION LPAREN parameters . RPAREN LBRACKET function_body RBRACKET
    (35) parameters -> parameters . COMMA parameters

    RPAREN          shift and go to state 60
    COMMA           shift and go to state 59


state 45

    (36) parameters -> arithmetic_expression .
    (22) arithmetic_expression -> arithmetic_expression . MATH_OPERATOR arithmetic_expression

    RPAREN          reduce using rule 36 (parameters -> arithmetic_expression .)
    COMMA           reduce using rule 36 (parameters -> arithmetic_expression .)
    MATH_OPERATOR   shift and go to state 38


state 46

    (30) function_implementation -> function_implementation MATH_OPERATOR expression .
    (27) function_body -> expression .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 27 (function_body -> expression .)
  ! reduce/reduce conflict for MATH_OPERATOR resolved using rule 27 (function_body -> expression .)
    SEMICOLON       reduce using rule 27 (function_body -> expression .)
    MATH_OPERATOR   reduce using rule 27 (function_body -> expression .)

  ! SEMICOLON       [ reduce using rule 30 (function_implementation -> function_implementation MATH_OPERATOR expression .) ]
  ! MATH_OPERATOR   [ reduce using rule 30 (function_implementation -> function_implementation MATH_OPERATOR expression .) ]


state 47

    (11) expression -> function_implementation SEMICOLON expression .
    (27) function_body -> expression .

  ! reduce/reduce conflict for RBRACKET resolved using rule 11 (expression -> function_implementation SEMICOLON expression .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 11 (expression -> function_implementation SEMICOLON expression .)
  ! reduce/reduce conflict for MATH_OPERATOR resolved using rule 11 (expression -> function_implementation SEMICOLON expression .)
  ! reduce/reduce conflict for RPAREN resolved using rule 11 (expression -> function_implementation SEMICOLON expression .)
    SEMICOLON       reduce using rule 11 (expression -> function_implementation SEMICOLON expression .)
    MATH_OPERATOR   reduce using rule 11 (expression -> function_implementation SEMICOLON expression .)
    RBRACKET        reduce using rule 11 (expression -> function_implementation SEMICOLON expression .)
    RPAREN          reduce using rule 11 (expression -> function_implementation SEMICOLON expression .)

  ! RBRACKET        [ reduce using rule 27 (function_body -> expression .) ]
  ! SEMICOLON       [ reduce using rule 27 (function_body -> expression .) ]
  ! MATH_OPERATOR   [ reduce using rule 27 (function_body -> expression .) ]
  ! RPAREN          [ reduce using rule 27 (function_body -> expression .) ]


state 48

    (17) declaration_with_assignment -> VAR ID ASSIGNMENT_OPERATOR . arithmetic_expression SEMICOLON
    (18) declaration_with_assignment -> VAR ID ASSIGNMENT_OPERATOR . function_declaration
    (19) arithmetic_expression -> . ID MATH_OPERATOR arithmetic_expression
    (20) arithmetic_expression -> . ID MATH_OPERATOR SEMICOLON
    (21) arithmetic_expression -> . NUMBER MATH_OPERATOR arithmetic_expression
    (22) arithmetic_expression -> . arithmetic_expression MATH_OPERATOR arithmetic_expression
    (23) arithmetic_expression -> . NUMBER
    (24) arithmetic_expression -> . ID
    (25) arithmetic_expression -> . STRING
    (26) function_declaration -> . FUNCTION LPAREN parameters RPAREN LBRACKET function_body RBRACKET

    ID              shift and go to state 43
    NUMBER          shift and go to state 14
    STRING          shift and go to state 3
    FUNCTION        shift and go to state 6

    function_declaration           shift and go to state 61
    arithmetic_expression          shift and go to state 62

state 49

    (42) if -> IF LPAREN predicate . RPAREN block
    (40) predicate -> predicate . LOGICAL_OPERATOR predicate

    RPAREN          shift and go to state 64
    LOGICAL_OPERATOR shift and go to state 63


state 50

    (38) predicate -> ID . LOGICAL_OPERATOR arithmetic_expression
    (39) predicate -> ID . LOGICAL_OPERATOR ID

    LOGICAL_OPERATOR shift and go to state 65


state 51

    (33) function_parameters -> arithmetic_expression .
    (22) arithmetic_expression -> arithmetic_expression . MATH_OPERATOR arithmetic_expression

    COMMA           reduce using rule 33 (function_parameters -> arithmetic_expression .)
    RPAREN          reduce using rule 33 (function_parameters -> arithmetic_expression .)
    MATH_OPERATOR   shift and go to state 38


state 52

    (29) function_implementation -> ID LPAREN function_parameters . RPAREN
    (32) function_parameters -> function_parameters . COMMA function_parameters

    RPAREN          shift and go to state 66
    COMMA           shift and go to state 67


state 53

    (19) arithmetic_expression -> ID MATH_OPERATOR arithmetic_expression .
    (22) arithmetic_expression -> arithmetic_expression . MATH_OPERATOR arithmetic_expression

  ! shift/reduce conflict for MATH_OPERATOR resolved as shift
    RBRACKET        reduce using rule 19 (arithmetic_expression -> ID MATH_OPERATOR arithmetic_expression .)
    SEMICOLON       reduce using rule 19 (arithmetic_expression -> ID MATH_OPERATOR arithmetic_expression .)
    RPAREN          reduce using rule 19 (arithmetic_expression -> ID MATH_OPERATOR arithmetic_expression .)
    COMMA           reduce using rule 19 (arithmetic_expression -> ID MATH_OPERATOR arithmetic_expression .)
    LOGICAL_OPERATOR reduce using rule 19 (arithmetic_expression -> ID MATH_OPERATOR arithmetic_expression .)
    MATH_OPERATOR   shift and go to state 38

  ! MATH_OPERATOR   [ reduce using rule 19 (arithmetic_expression -> ID MATH_OPERATOR arithmetic_expression .) ]


state 54

    (20) arithmetic_expression -> ID MATH_OPERATOR SEMICOLON .

    MATH_OPERATOR   reduce using rule 20 (arithmetic_expression -> ID MATH_OPERATOR SEMICOLON .)
    RBRACKET        reduce using rule 20 (arithmetic_expression -> ID MATH_OPERATOR SEMICOLON .)
    SEMICOLON       reduce using rule 20 (arithmetic_expression -> ID MATH_OPERATOR SEMICOLON .)
    RPAREN          reduce using rule 20 (arithmetic_expression -> ID MATH_OPERATOR SEMICOLON .)
    COMMA           reduce using rule 20 (arithmetic_expression -> ID MATH_OPERATOR SEMICOLON .)
    LOGICAL_OPERATOR reduce using rule 20 (arithmetic_expression -> ID MATH_OPERATOR SEMICOLON .)


state 55

    (21) arithmetic_expression -> NUMBER MATH_OPERATOR arithmetic_expression .
    (22) arithmetic_expression -> arithmetic_expression . MATH_OPERATOR arithmetic_expression

  ! shift/reduce conflict for MATH_OPERATOR resolved as shift
    RBRACKET        reduce using rule 21 (arithmetic_expression -> NUMBER MATH_OPERATOR arithmetic_expression .)
    SEMICOLON       reduce using rule 21 (arithmetic_expression -> NUMBER MATH_OPERATOR arithmetic_expression .)
    RPAREN          reduce using rule 21 (arithmetic_expression -> NUMBER MATH_OPERATOR arithmetic_expression .)
    COMMA           reduce using rule 21 (arithmetic_expression -> NUMBER MATH_OPERATOR arithmetic_expression .)
    LOGICAL_OPERATOR reduce using rule 21 (arithmetic_expression -> NUMBER MATH_OPERATOR arithmetic_expression .)
    MATH_OPERATOR   shift and go to state 38

  ! MATH_OPERATOR   [ reduce using rule 21 (arithmetic_expression -> NUMBER MATH_OPERATOR arithmetic_expression .) ]


state 56

    (41) while -> WHILE LPAREN predicate . RPAREN block
    (40) predicate -> predicate . LOGICAL_OPERATOR predicate

    RPAREN          shift and go to state 68
    LOGICAL_OPERATOR shift and go to state 63


state 57

    (22) arithmetic_expression -> arithmetic_expression MATH_OPERATOR arithmetic_expression .
    (22) arithmetic_expression -> arithmetic_expression . MATH_OPERATOR arithmetic_expression

  ! shift/reduce conflict for MATH_OPERATOR resolved as shift
    RBRACKET        reduce using rule 22 (arithmetic_expression -> arithmetic_expression MATH_OPERATOR arithmetic_expression .)
    SEMICOLON       reduce using rule 22 (arithmetic_expression -> arithmetic_expression MATH_OPERATOR arithmetic_expression .)
    RPAREN          reduce using rule 22 (arithmetic_expression -> arithmetic_expression MATH_OPERATOR arithmetic_expression .)
    COMMA           reduce using rule 22 (arithmetic_expression -> arithmetic_expression MATH_OPERATOR arithmetic_expression .)
    LOGICAL_OPERATOR reduce using rule 22 (arithmetic_expression -> arithmetic_expression MATH_OPERATOR arithmetic_expression .)
    MATH_OPERATOR   shift and go to state 38

  ! MATH_OPERATOR   [ reduce using rule 22 (arithmetic_expression -> arithmetic_expression MATH_OPERATOR arithmetic_expression .) ]


state 58

    (37) console_function -> METHOD_OF_CLASS_CONSOLE LPAREN expression . RPAREN SEMICOLON
    (27) function_body -> expression .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 69

  ! RPAREN          [ reduce using rule 27 (function_body -> expression .) ]


state 59

    (35) parameters -> parameters COMMA . parameters
    (34) parameters -> .
    (35) parameters -> . parameters COMMA parameters
    (36) parameters -> . arithmetic_expression
    (19) arithmetic_expression -> . ID MATH_OPERATOR arithmetic_expression
    (20) arithmetic_expression -> . ID MATH_OPERATOR SEMICOLON
    (21) arithmetic_expression -> . NUMBER MATH_OPERATOR arithmetic_expression
    (22) arithmetic_expression -> . arithmetic_expression MATH_OPERATOR arithmetic_expression
    (23) arithmetic_expression -> . NUMBER
    (24) arithmetic_expression -> . ID
    (25) arithmetic_expression -> . STRING

    COMMA           reduce using rule 34 (parameters -> .)
    RPAREN          reduce using rule 34 (parameters -> .)
    ID              shift and go to state 43
    NUMBER          shift and go to state 14
    STRING          shift and go to state 3

    parameters                     shift and go to state 70
    arithmetic_expression          shift and go to state 45

state 60

    (26) function_declaration -> FUNCTION LPAREN parameters RPAREN . LBRACKET function_body RBRACKET

    LBRACKET        shift and go to state 71


state 61

    (18) declaration_with_assignment -> VAR ID ASSIGNMENT_OPERATOR function_declaration .

    VAR             reduce using rule 18 (declaration_with_assignment -> VAR ID ASSIGNMENT_OPERATOR function_declaration .)
    IF              reduce using rule 18 (declaration_with_assignment -> VAR ID ASSIGNMENT_OPERATOR function_declaration .)
    ELSE            reduce using rule 18 (declaration_with_assignment -> VAR ID ASSIGNMENT_OPERATOR function_declaration .)
    RETURN          reduce using rule 18 (declaration_with_assignment -> VAR ID ASSIGNMENT_OPERATOR function_declaration .)
    ID              reduce using rule 18 (declaration_with_assignment -> VAR ID ASSIGNMENT_OPERATOR function_declaration .)
    NUMBER          reduce using rule 18 (declaration_with_assignment -> VAR ID ASSIGNMENT_OPERATOR function_declaration .)
    STRING          reduce using rule 18 (declaration_with_assignment -> VAR ID ASSIGNMENT_OPERATOR function_declaration .)
    WHILE           reduce using rule 18 (declaration_with_assignment -> VAR ID ASSIGNMENT_OPERATOR function_declaration .)
    METHOD_OF_CLASS_CONSOLE reduce using rule 18 (declaration_with_assignment -> VAR ID ASSIGNMENT_OPERATOR function_declaration .)
    SEMICOLON       reduce using rule 18 (declaration_with_assignment -> VAR ID ASSIGNMENT_OPERATOR function_declaration .)
    RBRACKET        reduce using rule 18 (declaration_with_assignment -> VAR ID ASSIGNMENT_OPERATOR function_declaration .)
    MATH_OPERATOR   reduce using rule 18 (declaration_with_assignment -> VAR ID ASSIGNMENT_OPERATOR function_declaration .)
    RPAREN          reduce using rule 18 (declaration_with_assignment -> VAR ID ASSIGNMENT_OPERATOR function_declaration .)


state 62

    (17) declaration_with_assignment -> VAR ID ASSIGNMENT_OPERATOR arithmetic_expression . SEMICOLON
    (22) arithmetic_expression -> arithmetic_expression . MATH_OPERATOR arithmetic_expression

    SEMICOLON       shift and go to state 72
    MATH_OPERATOR   shift and go to state 38


state 63

    (40) predicate -> predicate LOGICAL_OPERATOR . predicate
    (38) predicate -> . ID LOGICAL_OPERATOR arithmetic_expression
    (39) predicate -> . ID LOGICAL_OPERATOR ID
    (40) predicate -> . predicate LOGICAL_OPERATOR predicate

    ID              shift and go to state 50

    predicate                      shift and go to state 73

state 64

    (42) if -> IF LPAREN predicate RPAREN . block
    (1) block -> .
    (2) block -> . LBRACKET body RBRACKET

    VAR             reduce using rule 1 (block -> .)
    IF              reduce using rule 1 (block -> .)
    ELSE            reduce using rule 1 (block -> .)
    RETURN          reduce using rule 1 (block -> .)
    ID              reduce using rule 1 (block -> .)
    NUMBER          reduce using rule 1 (block -> .)
    STRING          reduce using rule 1 (block -> .)
    WHILE           reduce using rule 1 (block -> .)
    METHOD_OF_CLASS_CONSOLE reduce using rule 1 (block -> .)
    LBRACKET        shift and go to state 2

    block                          shift and go to state 74

state 65

    (38) predicate -> ID LOGICAL_OPERATOR . arithmetic_expression
    (39) predicate -> ID LOGICAL_OPERATOR . ID
    (19) arithmetic_expression -> . ID MATH_OPERATOR arithmetic_expression
    (20) arithmetic_expression -> . ID MATH_OPERATOR SEMICOLON
    (21) arithmetic_expression -> . NUMBER MATH_OPERATOR arithmetic_expression
    (22) arithmetic_expression -> . arithmetic_expression MATH_OPERATOR arithmetic_expression
    (23) arithmetic_expression -> . NUMBER
    (24) arithmetic_expression -> . ID
    (25) arithmetic_expression -> . STRING

    ID              shift and go to state 75
    NUMBER          shift and go to state 14
    STRING          shift and go to state 3

    arithmetic_expression          shift and go to state 76

state 66

    (29) function_implementation -> ID LPAREN function_parameters RPAREN .

    SEMICOLON       reduce using rule 29 (function_implementation -> ID LPAREN function_parameters RPAREN .)
    MATH_OPERATOR   reduce using rule 29 (function_implementation -> ID LPAREN function_parameters RPAREN .)


state 67

    (32) function_parameters -> function_parameters COMMA . function_parameters
    (31) function_parameters -> .
    (32) function_parameters -> . function_parameters COMMA function_parameters
    (33) function_parameters -> . arithmetic_expression
    (19) arithmetic_expression -> . ID MATH_OPERATOR arithmetic_expression
    (20) arithmetic_expression -> . ID MATH_OPERATOR SEMICOLON
    (21) arithmetic_expression -> . NUMBER MATH_OPERATOR arithmetic_expression
    (22) arithmetic_expression -> . arithmetic_expression MATH_OPERATOR arithmetic_expression
    (23) arithmetic_expression -> . NUMBER
    (24) arithmetic_expression -> . ID
    (25) arithmetic_expression -> . STRING

    COMMA           reduce using rule 31 (function_parameters -> .)
    RPAREN          reduce using rule 31 (function_parameters -> .)
    ID              shift and go to state 43
    NUMBER          shift and go to state 14
    STRING          shift and go to state 3

    arithmetic_expression          shift and go to state 51
    function_parameters            shift and go to state 77

state 68

    (41) while -> WHILE LPAREN predicate RPAREN . block
    (1) block -> .
    (2) block -> . LBRACKET body RBRACKET

    VAR             reduce using rule 1 (block -> .)
    IF              reduce using rule 1 (block -> .)
    ELSE            reduce using rule 1 (block -> .)
    RETURN          reduce using rule 1 (block -> .)
    ID              reduce using rule 1 (block -> .)
    NUMBER          reduce using rule 1 (block -> .)
    STRING          reduce using rule 1 (block -> .)
    WHILE           reduce using rule 1 (block -> .)
    METHOD_OF_CLASS_CONSOLE reduce using rule 1 (block -> .)
    RBRACKET        reduce using rule 1 (block -> .)
    SEMICOLON       reduce using rule 1 (block -> .)
    MATH_OPERATOR   reduce using rule 1 (block -> .)
    RPAREN          reduce using rule 1 (block -> .)
    LBRACKET        shift and go to state 2

    block                          shift and go to state 78

state 69

    (37) console_function -> METHOD_OF_CLASS_CONSOLE LPAREN expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 79


state 70

    (35) parameters -> parameters COMMA parameters .
    (35) parameters -> parameters . COMMA parameters

  ! shift/reduce conflict for COMMA resolved as shift
    RPAREN          reduce using rule 35 (parameters -> parameters COMMA parameters .)
    COMMA           shift and go to state 59

  ! COMMA           [ reduce using rule 35 (parameters -> parameters COMMA parameters .) ]


state 71

    (26) function_declaration -> FUNCTION LPAREN parameters RPAREN LBRACKET . function_body RBRACKET
    (27) function_body -> . expression
    (28) function_body -> . RETURN expression SEMICOLON
    (5) expression -> . declaration_with_assignment expression
    (6) expression -> . declaration_with_assignment
    (7) expression -> . if expression
    (8) expression -> . else
    (9) expression -> . function_body
    (10) expression -> . function_implementation SEMICOLON
    (11) expression -> . function_implementation SEMICOLON expression
    (12) expression -> . arithmetic_expression
    (13) expression -> . while expression
    (14) expression -> . while
    (15) expression -> . console_function
    (16) expression -> . console_function expression
    (17) declaration_with_assignment -> . VAR ID ASSIGNMENT_OPERATOR arithmetic_expression SEMICOLON
    (18) declaration_with_assignment -> . VAR ID ASSIGNMENT_OPERATOR function_declaration
    (42) if -> . IF LPAREN predicate RPAREN block
    (43) else -> . ELSE block
    (29) function_implementation -> . ID LPAREN function_parameters RPAREN
    (30) function_implementation -> . function_implementation MATH_OPERATOR expression
    (19) arithmetic_expression -> . ID MATH_OPERATOR arithmetic_expression
    (20) arithmetic_expression -> . ID MATH_OPERATOR SEMICOLON
    (21) arithmetic_expression -> . NUMBER MATH_OPERATOR arithmetic_expression
    (22) arithmetic_expression -> . arithmetic_expression MATH_OPERATOR arithmetic_expression
    (23) arithmetic_expression -> . NUMBER
    (24) arithmetic_expression -> . ID
    (25) arithmetic_expression -> . STRING
    (41) while -> . WHILE LPAREN predicate RPAREN block
    (37) console_function -> . METHOD_OF_CLASS_CONSOLE LPAREN expression RPAREN SEMICOLON

    RETURN          shift and go to state 5
    VAR             shift and go to state 8
    IF              shift and go to state 9
    ELSE            shift and go to state 10
    ID              shift and go to state 12
    NUMBER          shift and go to state 14
    STRING          shift and go to state 3
    WHILE           shift and go to state 17
    METHOD_OF_CLASS_CONSOLE shift and go to state 19

    console_function               shift and go to state 13
    function_body                  shift and go to state 80
    while                          shift and go to state 15
    function_implementation        shift and go to state 7
    arithmetic_expression          shift and go to state 18
    declaration_with_assignment    shift and go to state 16
    if                             shift and go to state 21
    else                           shift and go to state 22
    expression                     shift and go to state 81

state 72

    (17) declaration_with_assignment -> VAR ID ASSIGNMENT_OPERATOR arithmetic_expression SEMICOLON .

    VAR             reduce using rule 17 (declaration_with_assignment -> VAR ID ASSIGNMENT_OPERATOR arithmetic_expression SEMICOLON .)
    IF              reduce using rule 17 (declaration_with_assignment -> VAR ID ASSIGNMENT_OPERATOR arithmetic_expression SEMICOLON .)
    ELSE            reduce using rule 17 (declaration_with_assignment -> VAR ID ASSIGNMENT_OPERATOR arithmetic_expression SEMICOLON .)
    RETURN          reduce using rule 17 (declaration_with_assignment -> VAR ID ASSIGNMENT_OPERATOR arithmetic_expression SEMICOLON .)
    ID              reduce using rule 17 (declaration_with_assignment -> VAR ID ASSIGNMENT_OPERATOR arithmetic_expression SEMICOLON .)
    NUMBER          reduce using rule 17 (declaration_with_assignment -> VAR ID ASSIGNMENT_OPERATOR arithmetic_expression SEMICOLON .)
    STRING          reduce using rule 17 (declaration_with_assignment -> VAR ID ASSIGNMENT_OPERATOR arithmetic_expression SEMICOLON .)
    WHILE           reduce using rule 17 (declaration_with_assignment -> VAR ID ASSIGNMENT_OPERATOR arithmetic_expression SEMICOLON .)
    METHOD_OF_CLASS_CONSOLE reduce using rule 17 (declaration_with_assignment -> VAR ID ASSIGNMENT_OPERATOR arithmetic_expression SEMICOLON .)
    SEMICOLON       reduce using rule 17 (declaration_with_assignment -> VAR ID ASSIGNMENT_OPERATOR arithmetic_expression SEMICOLON .)
    RBRACKET        reduce using rule 17 (declaration_with_assignment -> VAR ID ASSIGNMENT_OPERATOR arithmetic_expression SEMICOLON .)
    MATH_OPERATOR   reduce using rule 17 (declaration_with_assignment -> VAR ID ASSIGNMENT_OPERATOR arithmetic_expression SEMICOLON .)
    RPAREN          reduce using rule 17 (declaration_with_assignment -> VAR ID ASSIGNMENT_OPERATOR arithmetic_expression SEMICOLON .)


state 73

    (40) predicate -> predicate LOGICAL_OPERATOR predicate .
    (40) predicate -> predicate . LOGICAL_OPERATOR predicate

  ! shift/reduce conflict for LOGICAL_OPERATOR resolved as shift
    RPAREN          reduce using rule 40 (predicate -> predicate LOGICAL_OPERATOR predicate .)
    LOGICAL_OPERATOR shift and go to state 63

  ! LOGICAL_OPERATOR [ reduce using rule 40 (predicate -> predicate LOGICAL_OPERATOR predicate .) ]


state 74

    (42) if -> IF LPAREN predicate RPAREN block .

    VAR             reduce using rule 42 (if -> IF LPAREN predicate RPAREN block .)
    IF              reduce using rule 42 (if -> IF LPAREN predicate RPAREN block .)
    ELSE            reduce using rule 42 (if -> IF LPAREN predicate RPAREN block .)
    RETURN          reduce using rule 42 (if -> IF LPAREN predicate RPAREN block .)
    ID              reduce using rule 42 (if -> IF LPAREN predicate RPAREN block .)
    NUMBER          reduce using rule 42 (if -> IF LPAREN predicate RPAREN block .)
    STRING          reduce using rule 42 (if -> IF LPAREN predicate RPAREN block .)
    WHILE           reduce using rule 42 (if -> IF LPAREN predicate RPAREN block .)
    METHOD_OF_CLASS_CONSOLE reduce using rule 42 (if -> IF LPAREN predicate RPAREN block .)


state 75

    (39) predicate -> ID LOGICAL_OPERATOR ID .
    (19) arithmetic_expression -> ID . MATH_OPERATOR arithmetic_expression
    (20) arithmetic_expression -> ID . MATH_OPERATOR SEMICOLON
    (24) arithmetic_expression -> ID .

  ! shift/reduce conflict for MATH_OPERATOR resolved as shift
  ! reduce/reduce conflict for RPAREN resolved using rule 24 (arithmetic_expression -> ID .)
  ! reduce/reduce conflict for LOGICAL_OPERATOR resolved using rule 24 (arithmetic_expression -> ID .)
    MATH_OPERATOR   shift and go to state 32
    RPAREN          reduce using rule 24 (arithmetic_expression -> ID .)
    LOGICAL_OPERATOR reduce using rule 24 (arithmetic_expression -> ID .)

  ! LOGICAL_OPERATOR [ reduce using rule 39 (predicate -> ID LOGICAL_OPERATOR ID .) ]
  ! RPAREN          [ reduce using rule 39 (predicate -> ID LOGICAL_OPERATOR ID .) ]
  ! MATH_OPERATOR   [ reduce using rule 24 (arithmetic_expression -> ID .) ]


state 76

    (38) predicate -> ID LOGICAL_OPERATOR arithmetic_expression .
    (22) arithmetic_expression -> arithmetic_expression . MATH_OPERATOR arithmetic_expression

    LOGICAL_OPERATOR reduce using rule 38 (predicate -> ID LOGICAL_OPERATOR arithmetic_expression .)
    RPAREN          reduce using rule 38 (predicate -> ID LOGICAL_OPERATOR arithmetic_expression .)
    MATH_OPERATOR   shift and go to state 38


state 77

    (32) function_parameters -> function_parameters COMMA function_parameters .
    (32) function_parameters -> function_parameters . COMMA function_parameters

  ! shift/reduce conflict for COMMA resolved as shift
    RPAREN          reduce using rule 32 (function_parameters -> function_parameters COMMA function_parameters .)
    COMMA           shift and go to state 67

  ! COMMA           [ reduce using rule 32 (function_parameters -> function_parameters COMMA function_parameters .) ]


state 78

    (41) while -> WHILE LPAREN predicate RPAREN block .

    VAR             reduce using rule 41 (while -> WHILE LPAREN predicate RPAREN block .)
    IF              reduce using rule 41 (while -> WHILE LPAREN predicate RPAREN block .)
    ELSE            reduce using rule 41 (while -> WHILE LPAREN predicate RPAREN block .)
    RETURN          reduce using rule 41 (while -> WHILE LPAREN predicate RPAREN block .)
    ID              reduce using rule 41 (while -> WHILE LPAREN predicate RPAREN block .)
    NUMBER          reduce using rule 41 (while -> WHILE LPAREN predicate RPAREN block .)
    STRING          reduce using rule 41 (while -> WHILE LPAREN predicate RPAREN block .)
    WHILE           reduce using rule 41 (while -> WHILE LPAREN predicate RPAREN block .)
    METHOD_OF_CLASS_CONSOLE reduce using rule 41 (while -> WHILE LPAREN predicate RPAREN block .)
    RPAREN          reduce using rule 41 (while -> WHILE LPAREN predicate RPAREN block .)
    SEMICOLON       reduce using rule 41 (while -> WHILE LPAREN predicate RPAREN block .)
    RBRACKET        reduce using rule 41 (while -> WHILE LPAREN predicate RPAREN block .)
    MATH_OPERATOR   reduce using rule 41 (while -> WHILE LPAREN predicate RPAREN block .)


state 79

    (37) console_function -> METHOD_OF_CLASS_CONSOLE LPAREN expression RPAREN SEMICOLON .

    VAR             reduce using rule 37 (console_function -> METHOD_OF_CLASS_CONSOLE LPAREN expression RPAREN SEMICOLON .)
    IF              reduce using rule 37 (console_function -> METHOD_OF_CLASS_CONSOLE LPAREN expression RPAREN SEMICOLON .)
    ELSE            reduce using rule 37 (console_function -> METHOD_OF_CLASS_CONSOLE LPAREN expression RPAREN SEMICOLON .)
    RETURN          reduce using rule 37 (console_function -> METHOD_OF_CLASS_CONSOLE LPAREN expression RPAREN SEMICOLON .)
    ID              reduce using rule 37 (console_function -> METHOD_OF_CLASS_CONSOLE LPAREN expression RPAREN SEMICOLON .)
    NUMBER          reduce using rule 37 (console_function -> METHOD_OF_CLASS_CONSOLE LPAREN expression RPAREN SEMICOLON .)
    STRING          reduce using rule 37 (console_function -> METHOD_OF_CLASS_CONSOLE LPAREN expression RPAREN SEMICOLON .)
    WHILE           reduce using rule 37 (console_function -> METHOD_OF_CLASS_CONSOLE LPAREN expression RPAREN SEMICOLON .)
    METHOD_OF_CLASS_CONSOLE reduce using rule 37 (console_function -> METHOD_OF_CLASS_CONSOLE LPAREN expression RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 37 (console_function -> METHOD_OF_CLASS_CONSOLE LPAREN expression RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 37 (console_function -> METHOD_OF_CLASS_CONSOLE LPAREN expression RPAREN SEMICOLON .)
    MATH_OPERATOR   reduce using rule 37 (console_function -> METHOD_OF_CLASS_CONSOLE LPAREN expression RPAREN SEMICOLON .)
    RPAREN          reduce using rule 37 (console_function -> METHOD_OF_CLASS_CONSOLE LPAREN expression RPAREN SEMICOLON .)


state 80

    (26) function_declaration -> FUNCTION LPAREN parameters RPAREN LBRACKET function_body . RBRACKET
    (9) expression -> function_body .

  ! shift/reduce conflict for RBRACKET resolved as shift
    RBRACKET        shift and go to state 82

  ! RBRACKET        [ reduce using rule 9 (expression -> function_body .) ]


state 81

    (27) function_body -> expression .

    RBRACKET        reduce using rule 27 (function_body -> expression .)


state 82

    (26) function_declaration -> FUNCTION LPAREN parameters RPAREN LBRACKET function_body RBRACKET .

    VAR             reduce using rule 26 (function_declaration -> FUNCTION LPAREN parameters RPAREN LBRACKET function_body RBRACKET .)
    IF              reduce using rule 26 (function_declaration -> FUNCTION LPAREN parameters RPAREN LBRACKET function_body RBRACKET .)
    ELSE            reduce using rule 26 (function_declaration -> FUNCTION LPAREN parameters RPAREN LBRACKET function_body RBRACKET .)
    RETURN          reduce using rule 26 (function_declaration -> FUNCTION LPAREN parameters RPAREN LBRACKET function_body RBRACKET .)
    ID              reduce using rule 26 (function_declaration -> FUNCTION LPAREN parameters RPAREN LBRACKET function_body RBRACKET .)
    NUMBER          reduce using rule 26 (function_declaration -> FUNCTION LPAREN parameters RPAREN LBRACKET function_body RBRACKET .)
    STRING          reduce using rule 26 (function_declaration -> FUNCTION LPAREN parameters RPAREN LBRACKET function_body RBRACKET .)
    WHILE           reduce using rule 26 (function_declaration -> FUNCTION LPAREN parameters RPAREN LBRACKET function_body RBRACKET .)
    METHOD_OF_CLASS_CONSOLE reduce using rule 26 (function_declaration -> FUNCTION LPAREN parameters RPAREN LBRACKET function_body RBRACKET .)
    RBRACKET        reduce using rule 26 (function_declaration -> FUNCTION LPAREN parameters RPAREN LBRACKET function_body RBRACKET .)
    SEMICOLON       reduce using rule 26 (function_declaration -> FUNCTION LPAREN parameters RPAREN LBRACKET function_body RBRACKET .)
    MATH_OPERATOR   reduce using rule 26 (function_declaration -> FUNCTION LPAREN parameters RPAREN LBRACKET function_body RBRACKET .)
    RPAREN          reduce using rule 26 (function_declaration -> FUNCTION LPAREN parameters RPAREN LBRACKET function_body RBRACKET .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MATH_OPERATOR in state 12 resolved as shift
WARNING: shift/reduce conflict for MATH_OPERATOR in state 14 resolved as shift
WARNING: shift/reduce conflict for MATH_OPERATOR in state 18 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 24 resolved as shift
WARNING: shift/reduce conflict for MATH_OPERATOR in state 43 resolved as shift
WARNING: shift/reduce conflict for MATH_OPERATOR in state 53 resolved as shift
WARNING: shift/reduce conflict for MATH_OPERATOR in state 55 resolved as shift
WARNING: shift/reduce conflict for MATH_OPERATOR in state 57 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 58 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 70 resolved as shift
WARNING: shift/reduce conflict for LOGICAL_OPERATOR in state 73 resolved as shift
WARNING: shift/reduce conflict for MATH_OPERATOR in state 75 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 77 resolved as shift
WARNING: shift/reduce conflict for RBRACKET in state 80 resolved as shift
WARNING: reduce/reduce conflict in state 20 resolved using rule (body -> expression)
WARNING: rejected rule (function_body -> expression) in state 20
WARNING: reduce/reduce conflict in state 33 resolved using rule (expression -> console_function expression)
WARNING: rejected rule (function_body -> expression) in state 33
WARNING: reduce/reduce conflict in state 35 resolved using rule (expression -> while expression)
WARNING: rejected rule (function_body -> expression) in state 35
WARNING: reduce/reduce conflict in state 36 resolved using rule (expression -> declaration_with_assignment expression)
WARNING: rejected rule (function_body -> expression) in state 36
WARNING: reduce/reduce conflict in state 40 resolved using rule (expression -> if expression)
WARNING: rejected rule (function_body -> expression) in state 40
WARNING: reduce/reduce conflict in state 46 resolved using rule (function_body -> expression)
WARNING: rejected rule (function_implementation -> function_implementation MATH_OPERATOR expression) in state 46
WARNING: reduce/reduce conflict in state 47 resolved using rule (expression -> function_implementation SEMICOLON expression)
WARNING: rejected rule (function_body -> expression) in state 47
WARNING: reduce/reduce conflict in state 75 resolved using rule (arithmetic_expression -> ID)
WARNING: rejected rule (predicate -> ID LOGICAL_OPERATOR ID) in state 75
WARNING: Rule (function_implementation -> function_implementation MATH_OPERATOR expression) is never reduced
WARNING: Rule (predicate -> ID LOGICAL_OPERATOR ID) is never reduced
